project_name: "flappy_bird"

runtime:
  use_cuda: true
# Environment Configuration
environment:
  type: "FlappyBird"
  seed: 502
  render_mode: "rgb_array"

# Monte Carlo Tree Search (MCTS) configuration
training_data_generator:
  num_episodes: 10                   # total number of episodes for self-play/learning
  max_steps_per_episode: 500
  total_time: 3600
  epsilon: 1.0
  epsilon_decay: 0.995
  mcts:
      selection_strategy: "puct"          # can be "uct" or "puct"
      max_iterations: 50                       # maximum iterations (set to 0 if using time-based termination)
      max_time: 100.0                      # maximum search time per move (in seconds)
      model_look_ahead: 1
      discount_factor: 0.998


# Training hyperparameters
training:
  learning_rate: 0.001
  weight_decay: 0.0001
  epochs: 100
  batch_size: 32
  replay_buffer_size: 40
  alpha: 0.6
  betas: [0.9, 0.999]
  look_back: 4
  roll_ahead: 5
  mini_batch_size: 256
  reward_coefficient: 1.0 # 0.25
  value_coefficient: 1.0 # 0.5
  policy_coefficient: 1.0
  min_learning_rate: 0.0001
  total_training_steps: 1000000
  use_mixed_precision: false
  lr_schedule: "cosine"



validation:
  video_upload_interval: 10
  simulation_count: 1
  simulation_depth: 300

# Neural network configurations
networks:
  latent_shape: [256, 6, 6]
  representation:
    history_length: 32
    downsample:
      - type: "conv_layer" # in 512x288x3 out 256x144x128
        out_channels: 128
        kernel_size: 2
        stride: 2
        padding: 0
        activation: "relu"
      - type: "res_block"
        out_channels: 128
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "res_block"
        in_channels: 128
        out_channels: 128
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "conv_layer" # in 256x144x128 out 128x72x256
        out_channels: 256
        kernel_size: 2
        stride: 2
        padding: 0
        activation: "relu"
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "pool_layer"  # in 128x72x256 out 64x36x256
        kernel_size: 2
        stride: 2
        padding: 0
        pool_type: "avg"
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "res_block"
        in_channels: 256
        out_channels: 256
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
      - type: "pool_layer" # in 64x36x256 out 32x18x256
        kernel_size: 2
        stride: 2
        padding: 0
        pool_type: "avg"
    res_net:
      - in_channels: 3
        out_channels: 3
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
  dynamics:
    res_net:
      - in_channels: 3
        out_channels: 3
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1
    reward_net:
      - out_features: 128
        activation: "relu"
  prediction:
    res_net:
      - in_channels: 3
        out_channels: 3
        kernel_size: 3
        stride: 1
        padding: 1
        activation: "relu"
        pool_stride: 1
        pool_kernel_size: 1

    value_net:
      - out_features: 256
        activation: "relu"
      - out_features: 128
        activation: "relu"
    policy_net:
      - out_features: 256
        activation: "relu"
      - out_features: 256
        activation: "relu"
